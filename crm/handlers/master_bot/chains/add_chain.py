from aiogram import Bot, Dispatcher, Router, types, F
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from aiogram.filters import CommandStart, Command
import re
from aiogram.utils.token import validate_token
from aiogram.utils.token import TokenValidationError
from data.config import BASE_WEBHOOK_URL, FOR_OTHER_BOTS
from keyboards import *
from states import *
from aiogram.fsm.context import FSMContext
from filters.start_filters import AdminFilter
from aiogram.exceptions import TelegramBadRequest, TelegramUnauthorizedError
from data.database import Database
from utils.webhook_utils import bot_set_webhook

db = Database()
db.create_tables()
router = Router()


@router.callback_query(lambda x: 'add_chain' in x.data)
async def add_chain_handler(call: CallbackQuery, state: FSMContext):
    await call.message.edit_text('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ü–µ–ø–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è', reply_markup=back_key('MENU'))
    await state.set_state(add_chain_state.name)

@router.message(add_chain_state.name)
async def add_chain_name(message: Message, state: FSMContext):
    await message.answer('–û—Ç–ª–∏—á–Ω–æ, –≥–æ—Ç–æ–≤–æ! ‚úÖ\n–¢–µ–ø–µ—Ä—å –¥–æ–±–∞–≤–∏–º –ø–µ—Ä–≤–æ–µ –∑–≤–µ–Ω–æ –≤ —ç—Ç—É —Ü–µ–Ω—é: –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞–Ω–∞–ª, –≥–¥–µ —è —è–≤–ª—è—é—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º', reply_markup=add_chain_choose_channel())
    await state.update_data(name=message.text)
    await state.set_state(add_chain_state.first_channel)

@router.message(add_chain_state.first_channel, F.chat_shared)
async def add_chain_channel(message: Message, state: FSMContext, bot: Bot):
    chat = message.chat_shared
    bot_info = await bot.get_me()
    try:
        chat_object = await bot.get_chat(chat.chat_id)
        rights = await bot.get_chat_member(chat.chat_id, bot_info.id)
        if rights.status == 'administrator':
            await message.answer(f'‚úÖ –Ø –¥–æ–±–∞–≤–∏–ª –∫–∞–Ω–∞–ª\n\n–î–∞–ª–µ–µ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –¥–ª—è —ç—Ç–æ–≥–æ –∑–≤–µ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ <code>7566501035:AAHSqFbQTEMvStf-IofwhqA75FRdFRzbkN7</code>', parse_mode="HTML", reply_markup=ReplyKeyboardRemove())
            await state.update_data(channel=chat.chat_id, channel_name=chat_object.title)
            await state.set_state(add_chain_state.bot)
        else:
            await message.answer('üôà –£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ!', reply_markup=back_key('MENU'))
    except TelegramBadRequest:
        await message.answer('üôà –£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ!', reply_markup=back_key('MENU'))

@router.message(add_chain_state.bot)
async def add_chain_bot(message: Message, state: FSMContext, bot: Bot):
    try:
        state_data = await state.get_data()
        chain_new_bot = Bot(message.text)
        x = await chain_new_bot.get_me()
        warning = ''
        try:
            bot_in_channel = await bot.get_chat_member(state_data['channel'], x.id)
            if bot_in_channel.status == 'administrator':
                warning = '‚öô –ë–æ—Ç —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ –∫–∞–Ω–∞–ª–µ, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –ø—Ä–∏–≤—è–∑–∞–Ω —Ä–∞–Ω–µ–µ. –í—Å—ë —Ö–æ—Ä–æ—à–æ.'
            else:
                warning = '<b>‚Äº –í–Ω–∏–º–∞–Ω–∏–µ! –î–∞–Ω–Ω—ã–π –ë–æ—Ç –ù–ï —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ –∫–∞–Ω–∞–ª–µ, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –ø—Ä–∏–≤—è–∑–∞–Ω —Ä–∞–Ω–µ–µ!</b>'
        except:
            warning = '<b>‚Äº –í–Ω–∏–º–∞–Ω–∏–µ! –î–∞–Ω–Ω—ã–π –ë–æ—Ç –ù–ï —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ –∫–∞–Ω–∞–ª–µ, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –ø—Ä–∏–≤—è–∑–∞–Ω —Ä–∞–Ω–µ–µ!</b>'
        await bot_set_webhook(chain_new_bot, message.text)
        await message.answer(f'–ë–æ—Ç <b>{x.full_name}</b> (@{x.username}) —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω ‚úÖ\n\n{warning}', parse_mode='HTML')

        CHAIN_NAME = state_data['name']
        CHANNEL_ID = state_data['channel']
        CHANNEL_NAME = state_data['channel_name']
        BOT_ID = x.id
        BOT_USERNAME = x.username
        BOT_TOKEN = message.text
        add_chain = db.add_chain(CHAIN_NAME)
        db.add_element(CHANNEL_ID, CHANNEL_NAME, BOT_TOKEN, BOT_USERNAME, BOT_ID, add_chain, True)
        await message.answer(f'üîó –ù–æ–≤–∞—è —Ü–µ–ø—å —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º ¬´{CHAIN_NAME}¬ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!\n\n–î–æ–±–∞–≤–∏–ª–∏ –ø–µ—Ä–≤—ã–π –∫–∞–Ω–∞–ª –∏ –±–æ—Ç–∞. –û—Å—Ç–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å –ø—É–ª–ª –ø—Ä–∏–≤–µ—Ç–æ–∫ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞–±–æ—Ç—É –¥–∞–Ω–Ω–æ–π —Ü–µ–ø–∏', reply_markup=chain_successful_added_key())

    except TelegramUnauthorizedError:
        await message.answer('–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω! ‚ùå')